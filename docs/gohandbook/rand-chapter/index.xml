<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>随机数 on 老陳网志</title>
    <link>/docs/gohandbook/rand-chapter/</link>
    <description>Recent content in 随机数 on 老陳网志</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy; 2021 &lt;a href=&#34;https://www.chenplus.com/&#34;&gt; ChenPlus.com &lt;/a&gt; &lt;a href=&#34;&#34;&gt; 渝ICP备18007511号 &lt;/a&gt;
</copyright>
    <lastBuildDate>Sat, 22 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="/docs/gohandbook/rand-chapter/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一文完全掌握 Go math/rand</title>
      <link>/docs/gohandbook/rand-chapter/2021-01-23-rand/</link>
      <pubDate>Sat, 23 Jan 2021 09:57:16 +0800</pubDate>
      
      <guid>/docs/gohandbook/rand-chapter/2021-01-23-rand/</guid>
      <description>Go 获取随机数是开发中经常会用到的功能, 不过这个里面还是有一些坑存在的, 本文将完全剖析 Go math/rand, 让你轻松使用 Go Rand. 开篇一问: 你觉得 rand 会 panic 吗 ? 源码剖析 math/rand 源码其实很简单, 就两个比较重要的函数 func (rng *rngSource) Seed(seed int64) { rng.tap = 0 rng.feed = rngLen - rngTap //... x := int32(seed) for i := -20; i &amp;lt; rngLen; i++ { x = seedrand(x) if i &amp;gt;= 0 { var u int64 u = int64(x) &amp;lt;&amp;lt; 40 x = seedrand(x) u ^= int64(x) &amp;lt;&amp;lt; 20 x = seedrand(x) u ^= int64(x) u ^= rngCooked[i] rng.vec[i] = u } } } 这个函数就是在设置 seed, 其实就是对 rng.vec 各个位置设</description>
    </item>
    
  </channel>
</rss>
