<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>logrus on 老陳网志</title>
    <link>/tags/logrus/</link>
    <description>Recent content in logrus on 老陳网志</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy; 2021 &lt;a href=&#34;https://www.chenplus.com/&#34;&gt; ChenPlus.com &lt;/a&gt; &lt;a href=&#34;&#34;&gt; 渝ICP备18007511号 &lt;/a&gt;
</copyright>
    <lastBuildDate>Sat, 05 Oct 2019 11:21:24 +0800</lastBuildDate><atom:link href="/tags/logrus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Logrus源码阅读(2)--logrus生命周期</title>
      <link>/posts111/2019-10-05-logrus-life-cycle/</link>
      <pubDate>Sat, 05 Oct 2019 11:21:24 +0800</pubDate>
      
      <guid>/posts111/2019-10-05-logrus-life-cycle/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Logrus源码阅读(1)--基本用法</title>
      <link>/posts111/2019-06-11-logurs-1/</link>
      <pubDate>Tue, 16 Jul 2019 20:06:27 +0800</pubDate>
      
      <guid>/posts111/2019-06-11-logurs-1/</guid>
      <description>选择golang日志库时, 使用logrus的主要原因就是因为star比较多, 而且社区活跃度非常高. 在项目使用过程中, 发现logrus的调用入口, 性能, 插件, 自定义插件, 输出格式等都非常优秀, 值得学习一下 整体结构图 整体来看总共提供两种方式调用: logrus.Info(&amp;ldquo;hello logrus&amp;rdquo;) logrus.WithField(logruns.Fields{&amp;ldquo;key1&amp;rdquo;:&amp;ldquo;v1&amp;rdquo;}).Info(&amp;ldquo;hello logrus&amp;rdquo;) 这些函数都在exported.go文件中. 当然为了提供不同级别输出日志的功能, 里面实现了各种各样的p</description>
    </item>
    
  </channel>
</rss>
